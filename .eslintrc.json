{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "import",
    "tailwindcss"
  ],
  "rules": {
    // Import Rules
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-unresolved": "error",
    "import/named": "error",
    "import/default": "error",
    "import/namespace": "error",
    "import/no-restricted-paths": "error",
    
    // TypeScript Rules
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "warn",
    
    // React Rules
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    
    // Tailwind Rules
    "tailwindcss/classnames-order": "off",
    "tailwindcss/no-custom-classname": "off",
    
    // General Rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "curly": ["error", "all"],
    "eqeqeq": ["error", "always"],
    "no-unused-vars": "off" // Turned off in favor of @typescript-eslint/no-unused-vars
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    },
    "tailwindcss": {
      "config": "tailwind.config.ts",
      "callees": ["cn", "clsx", "cva"]
    }
  },
  "ignorePatterns": [
    ".next",
    "**/components/ui/**",
    "node_modules",
    "public",
    "*.config.js",
    "*.config.ts"
  ]
}